
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEleft,right=PLUSASSIGNMINUSASSIGNMULASSIGNDIVASSIGNleftEQNEQleft><LESSEQMOREEQleft+-left*/leftDOTPLUSDOTMINUSleftDOTMULDOTDIVleft:' ( ) * + , - / : ; < = > BREAK CONTINUE DIVASSIGN DOTDIV DOTMINUS DOTMUL DOTPLUS ELSE EQ EYE FLOAT FOR ID IF INT LESSEQ MINUSASSIGN MOREEQ MULASSIGN NEQ ONES PLUSASSIGN PRINT RETURN STRING WHILE ZEROS [ ] { }program : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction\n                        | instructioninstruction : if_else_instr\n                       | while_instr\n                       | for_instr\n                       | break_instr\n                       | continue_instr\n                       | return_instr\n                       | print_instr\n                       | instr_block\n                       | assignment ';'if_else_instr : IF '(' expression ')' instruction %prec IFX \n                         | IF '(' expression ')' instruction ELSE instruction\n                         | IF '(' error ')' instruction  %prec IFX\n                         | IF '(' error ')' instruction ELSE instruction while_instr : WHILE '(' expression ')' instruction\n                       | WHILE '(' error ')' instruction for_instr : FOR for_init instructionfor_init : ID '=' expression ':' expressionbreak_instr : BREAK ';'continue_instr : CONTINUE ';'return_instr : RETURN expression ';'print_instr : PRINT print_vars ';'\n                       | PRINT error ';'print_vars : print_vars ',' print_var\n                      | print_varprint_var : STRING\n                     | expression instr_block : '{' instructions '}'number : INT\n                  | FLOATlvalue : ID\n                  | ID '[' INT ']'\n                  | ID '[' INT ',' INT ']'assignment : lvalue assign_op expressionassign_op : '='\n                     | PLUSASSIGN\n                     | MINUSASSIGN\n                     | MULASSIGN\n                     | DIVASSIGNexpression : number\n                      | lvalue\n                      | matrix_init\n                      | '(' expression ')'\n                      | '-' expression\n                      | expression '\\''\n                      | expression bin_op expressionbin_op : rel_op\n                  | num_op\n                  | dot_oprel_op : '<'\n                  | '>'\n                  | EQ\n                  | NEQ\n                  | LESSEQ\n                  | MOREEQnum_op : '+'\n                  | '-'\n                  | '*'\n                  | '/'dot_op : DOTPLUS\n                  | DOTMINUS\n                  | DOTMUL\n                  | DOTDIVmatrix_init : eye\n                       | ones\n                       | zeros\n                       | '[' matrix_rows ']'\n                       | '[' scopes ']'eye : EYE '(' INT ')' ones : ONES '(' INT ')' zeros : ZEROS '(' INT ')' matrix_rows : matrix_rows ';' row_elems\n                       | row_elems row_elems : row_elems ',' number\n                     | number scopes : scope\n                | scopes ';' scope scope : INT ':' INT\n                | number ':' number ':' number"
    
_lr_action_items = {'INT':([14,23,26,27,28,29,30,31,35,36,37,40,46,57,60,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,104,108,109,111,112,114,123,141,],[38,38,-43,-41,-42,-39,38,-40,64,38,67,38,38,38,38,38,117,-60,-57,-55,-63,-54,-65,-56,-59,-64,-62,-52,38,-61,-66,-51,-53,-67,-58,119,120,124,127,38,38,67,38,38,38,]),'DOTMINUS':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,84,84,84,84,84,84,-49,84,84,-36,-71,-72,-47,84,-75,-74,-73,84,-37,]),'RETURN':([0,3,6,7,9,10,11,15,16,17,19,20,21,25,32,33,34,38,41,43,44,45,47,49,50,56,58,61,63,73,76,77,92,102,105,106,107,110,113,116,118,121,122,125,126,134,135,136,137,138,139,140,142,143,145,146,],[23,-9,-10,-11,23,-35,-12,23,-13,-8,-7,-5,-6,23,-24,-14,23,-33,-45,-44,-34,-68,-70,-46,-69,-4,-23,-21,-32,-26,-48,-27,-49,-25,-36,23,23,-71,-72,-47,-50,23,23,-20,-19,-75,-74,-73,-17,-15,-22,-37,23,23,-18,-16,]),'EQ':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,85,85,85,85,85,-48,-49,85,85,-36,-71,-72,-47,85,-75,-74,-73,85,-37,]),'MOREEQ':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,86,86,86,86,86,-48,-49,86,86,-36,-71,-72,-47,86,-75,-74,-73,86,-37,]),'STRING':([14,74,],[42,42,]),'CONTINUE':([0,3,6,7,9,10,11,15,16,17,19,20,21,25,32,33,34,38,41,43,44,45,47,49,50,56,58,61,63,73,76,77,92,102,105,106,107,110,113,116,118,121,122,125,126,134,135,136,137,138,139,140,142,143,145,146,],[5,-9,-10,-11,5,-35,-12,5,-13,-8,-7,-5,-6,5,-24,-14,5,-33,-45,-44,-34,-68,-70,-46,-69,-4,-23,-21,-32,-26,-48,-27,-49,-25,-36,5,5,-71,-72,-47,-50,5,5,-20,-19,-75,-74,-73,-17,-15,-22,-37,5,5,-18,-16,]),'-':([10,14,23,26,27,28,29,30,31,36,38,40,41,43,44,45,46,47,49,50,52,57,59,60,62,66,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,103,105,110,113,116,118,123,134,135,136,139,140,],[-35,46,46,-43,-41,-42,-39,46,-40,46,-33,46,-45,-44,-34,-68,46,-70,-46,-69,91,46,91,46,91,91,46,91,-48,-60,-57,-55,-63,-54,-65,-56,-59,-64,-62,-52,46,-61,-49,-66,-51,-53,-67,-58,91,91,-36,-71,-72,-47,91,46,-75,-74,-73,91,-37,]),'ELSE':([3,6,7,11,16,17,19,21,32,33,58,61,63,73,77,102,125,126,137,138,145,146,],[-9,-10,-11,-12,-13,-8,-7,-6,-24,-14,-23,-21,-32,-26,-27,-25,-20,-19,142,143,-18,-16,]),'{':([0,3,6,7,9,10,11,15,16,17,19,20,21,25,32,33,34,38,41,43,44,45,47,49,50,56,58,61,63,73,76,77,92,102,105,106,107,110,113,116,118,121,122,125,126,134,135,136,137,138,139,140,142,143,145,146,],[9,-9,-10,-11,9,-35,-12,9,-13,-8,-7,-5,-6,9,-24,-14,9,-33,-45,-44,-34,-68,-70,-46,-69,-4,-23,-21,-32,-26,-48,-27,-49,-25,-36,9,9,-71,-72,-47,-50,9,9,-20,-19,-75,-74,-73,-17,-15,-22,-37,9,9,-18,-16,]),'+':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,79,79,79,79,79,-48,-49,79,79,-36,-71,-72,-47,79,-75,-74,-73,79,-37,]),'LESSEQ':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,97,97,97,97,97,-48,-49,97,97,-36,-71,-72,-47,97,-75,-74,-73,97,-37,]),':':([10,38,41,43,44,45,47,49,50,67,72,76,92,103,105,110,113,116,118,132,133,134,135,136,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,108,114,-48,-49,123,-36,-71,-72,-47,-50,114,141,-75,-74,-73,-37,]),';':([5,8,10,22,38,39,41,42,43,44,45,47,48,49,50,52,55,59,62,67,68,69,70,71,72,76,92,105,110,113,115,116,118,127,128,129,130,131,134,135,136,140,144,],[32,33,-35,58,-33,73,-45,-30,-44,-34,-68,-70,77,-46,-69,-31,-29,102,-38,-33,109,-77,112,-80,-79,-48,-49,-36,-71,-72,-28,-47,-50,-82,-76,-79,-78,-81,-75,-74,-73,-37,-83,]),']':([38,44,64,67,68,69,70,71,72,124,127,128,129,130,131,144,],[-33,-34,105,-33,110,-77,113,-80,-79,140,-82,-76,-79,-78,-81,-83,]),'=':([4,10,24,105,140,],[29,-35,60,-36,-37,]),'[':([10,14,23,26,27,28,29,30,31,36,40,46,57,60,74,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,123,],[35,37,37,-43,-41,-42,-39,37,-40,37,37,37,37,37,37,-60,-57,-55,-63,-54,-65,-56,-59,-64,-62,-52,37,-61,-66,-51,-53,-67,-58,37,]),'ONES':([14,23,26,27,28,29,30,31,36,40,46,57,60,74,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,123,],[53,53,-43,-41,-42,-39,53,-40,53,53,53,53,53,53,-60,-57,-55,-63,-54,-65,-56,-59,-64,-62,-52,53,-61,-66,-51,-53,-67,-58,53,]),'MULASSIGN':([4,10,105,140,],[28,-35,-36,-37,]),'DOTDIV':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,96,96,96,96,96,96,-49,96,96,-36,-71,-72,-47,96,-75,-74,-73,96,-37,]),'DOTMUL':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,93,93,93,93,93,93,-49,93,93,-36,-71,-72,-47,93,-75,-74,-73,93,-37,]),'FOR':([0,3,6,7,9,10,11,15,16,17,19,20,21,25,32,33,34,38,41,43,44,45,47,49,50,56,58,61,63,73,76,77,92,102,105,106,107,110,113,116,118,121,122,125,126,134,135,136,137,138,139,140,142,143,145,146,],[1,-9,-10,-11,1,-35,-12,1,-13,-8,-7,-5,-6,1,-24,-14,1,-33,-45,-44,-34,-68,-70,-46,-69,-4,-23,-21,-32,-26,-48,-27,-49,-25,-36,1,1,-71,-72,-47,-50,1,1,-20,-19,-75,-74,-73,-17,-15,-22,-37,1,1,-18,-16,]),'ID':([0,1,3,6,7,9,10,11,14,15,16,17,19,20,21,23,25,26,27,28,29,30,31,32,33,34,36,38,40,41,43,44,45,46,47,49,50,56,57,58,60,61,63,73,74,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,105,106,107,110,113,116,118,121,122,123,125,126,134,135,136,137,138,139,140,142,143,145,146,],[10,24,-9,-10,-11,10,-35,-12,10,10,-13,-8,-7,-5,-6,10,10,-43,-41,-42,-39,10,-40,-24,-14,10,10,-33,10,-45,-44,-34,-68,10,-70,-46,-69,-4,10,-23,10,-21,-32,-26,10,-48,-27,-60,-57,-55,-63,-54,-65,-56,-59,-64,-62,-52,10,-61,-49,-66,-51,-53,-67,-58,-25,-36,10,10,-71,-72,-47,-50,10,10,10,-20,-19,-75,-74,-73,-17,-15,-22,-37,10,10,-18,-16,]),')':([10,38,41,43,44,45,47,49,50,65,66,75,76,92,100,101,105,110,113,116,117,118,119,120,134,135,136,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,106,107,116,-48,-49,121,122,-36,-71,-72,-47,134,-50,135,136,-75,-74,-73,-37,]),'/':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,82,82,82,82,82,82,-49,82,82,-36,-71,-72,-47,82,-75,-74,-73,82,-37,]),'(':([12,14,18,23,26,27,28,29,30,31,36,40,46,51,53,54,57,60,74,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,123,],[36,40,57,40,-43,-41,-42,-39,40,-40,40,40,40,78,98,99,40,40,40,-60,-57,-55,-63,-54,-65,-56,-59,-64,-62,-52,40,-61,-66,-51,-53,-67,-58,40,]),'PLUSASSIGN':([4,10,105,140,],[31,-35,-36,-37,]),'}':([3,6,7,11,16,17,19,20,21,32,33,34,56,58,61,63,73,77,102,125,126,137,138,145,146,],[-9,-10,-11,-12,-13,-8,-7,-5,-6,-24,-14,63,-4,-23,-21,-32,-26,-27,-25,-20,-19,-17,-15,-18,-16,]),'*':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,88,88,88,88,88,88,-49,88,88,-36,-71,-72,-47,88,-75,-74,-73,88,-37,]),'FLOAT':([14,23,26,27,28,29,30,31,36,37,40,46,57,60,74,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,109,111,112,114,123,141,],[44,44,-43,-41,-42,-39,44,-40,44,44,44,44,44,44,44,-60,-57,-55,-63,-54,-65,-56,-59,-64,-62,-52,44,-61,-66,-51,-53,-67,-58,44,44,44,44,44,44,]),'IF':([0,3,6,7,9,10,11,15,16,17,19,20,21,25,32,33,34,38,41,43,44,45,47,49,50,56,58,61,63,73,76,77,92,102,105,106,107,110,113,116,118,121,122,125,126,134,135,136,137,138,139,140,142,143,145,146,],[18,-9,-10,-11,18,-35,-12,18,-13,-8,-7,-5,-6,18,-24,-14,18,-33,-45,-44,-34,-68,-70,-46,-69,-4,-23,-21,-32,-26,-48,-27,-49,-25,-36,18,18,-71,-72,-47,-50,18,18,-20,-19,-75,-74,-73,-17,-15,-22,-37,18,18,-18,-16,]),"'":([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,92,92,92,92,92,-48,-49,92,92,-36,-71,-72,-47,92,-75,-74,-73,92,-37,]),'error':([14,36,57,],[48,65,100,]),'$end':([0,2,3,6,7,11,13,15,16,17,19,20,21,32,33,56,58,61,63,73,77,102,125,126,137,138,145,146,],[-3,0,-9,-10,-11,-12,-1,-2,-13,-8,-7,-5,-6,-24,-14,-4,-23,-21,-32,-26,-27,-25,-20,-19,-17,-15,-18,-16,]),'NEQ':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,80,80,80,80,80,-48,-49,80,80,-36,-71,-72,-47,80,-75,-74,-73,80,-37,]),'WHILE':([0,3,6,7,9,10,11,15,16,17,19,20,21,25,32,33,34,38,41,43,44,45,47,49,50,56,58,61,63,73,76,77,92,102,105,106,107,110,113,116,118,121,122,125,126,134,135,136,137,138,139,140,142,143,145,146,],[12,-9,-10,-11,12,-35,-12,12,-13,-8,-7,-5,-6,12,-24,-14,12,-33,-45,-44,-34,-68,-70,-46,-69,-4,-23,-21,-32,-26,-48,-27,-49,-25,-36,12,12,-71,-72,-47,-50,12,12,-20,-19,-75,-74,-73,-17,-15,-22,-37,12,12,-18,-16,]),'<':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,83,83,83,83,83,-48,-49,83,83,-36,-71,-72,-47,83,-75,-74,-73,83,-37,]),'>':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,81,81,81,81,81,-48,-49,81,81,-36,-71,-72,-47,81,-75,-74,-73,81,-37,]),'PRINT':([0,3,6,7,9,10,11,15,16,17,19,20,21,25,32,33,34,38,41,43,44,45,47,49,50,56,58,61,63,73,76,77,92,102,105,106,107,110,113,116,118,121,122,125,126,134,135,136,137,138,139,140,142,143,145,146,],[14,-9,-10,-11,14,-35,-12,14,-13,-8,-7,-5,-6,14,-24,-14,14,-33,-45,-44,-34,-68,-70,-46,-69,-4,-23,-21,-32,-26,-48,-27,-49,-25,-36,14,14,-71,-72,-47,-50,14,14,-20,-19,-75,-74,-73,-17,-15,-22,-37,14,14,-18,-16,]),',':([10,38,39,41,42,43,44,45,47,49,50,52,55,64,67,69,72,76,92,105,110,113,115,116,118,128,129,130,134,135,136,140,],[-35,-33,74,-45,-30,-44,-34,-68,-70,-46,-69,-31,-29,104,-33,111,-79,-48,-49,-36,-71,-72,-28,-47,-50,111,-79,-78,-75,-74,-73,-37,]),'DOTPLUS':([10,38,41,43,44,45,47,49,50,52,59,62,66,75,76,92,101,103,105,110,113,116,118,134,135,136,139,140,],[-35,-33,-45,-44,-34,-68,-70,-46,-69,87,87,87,87,87,87,-49,87,87,-36,-71,-72,-47,87,-75,-74,-73,87,-37,]),'ZEROS':([14,23,26,27,28,29,30,31,36,40,46,57,60,74,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,123,],[51,51,-43,-41,-42,-39,51,-40,51,51,51,51,51,51,-60,-57,-55,-63,-54,-65,-56,-59,-64,-62,-52,51,-61,-66,-51,-53,-67,-58,51,]),'DIVASSIGN':([4,10,105,140,],[26,-35,-36,-37,]),'EYE':([14,23,26,27,28,29,30,31,36,40,46,57,60,74,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,123,],[54,54,-43,-41,-42,-39,54,-40,54,54,54,54,54,54,-60,-57,-55,-63,-54,-65,-56,-59,-64,-62,-52,54,-61,-66,-51,-53,-67,-58,54,]),'MINUSASSIGN':([4,10,105,140,],[27,-35,-36,-37,]),'BREAK':([0,3,6,7,9,10,11,15,16,17,19,20,21,25,32,33,34,38,41,43,44,45,47,49,50,56,58,61,63,73,76,77,92,102,105,106,107,110,113,116,118,121,122,125,126,134,135,136,137,138,139,140,142,143,145,146,],[22,-9,-10,-11,22,-35,-12,22,-13,-8,-7,-5,-6,22,-24,-14,22,-33,-45,-44,-34,-68,-70,-46,-69,-4,-23,-21,-32,-26,-48,-27,-49,-25,-36,22,22,-71,-72,-47,-50,22,22,-20,-19,-75,-74,-73,-17,-15,-22,-37,22,22,-18,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[2,]),'row_elems':([37,109,],[69,128,]),'break_instr':([0,9,15,25,34,106,107,121,122,142,143,],[3,3,3,3,3,3,3,3,3,3,3,]),'print_vars':([14,],[39,]),'zeros':([14,23,30,36,40,46,57,60,74,90,123,],[47,47,47,47,47,47,47,47,47,47,47,]),'scopes':([37,],[70,]),'number':([14,23,30,36,37,40,46,57,60,74,90,109,111,112,114,123,141,],[43,43,43,43,72,43,43,43,43,43,43,129,130,132,133,43,144,]),'eye':([14,23,30,36,40,46,57,60,74,90,123,],[45,45,45,45,45,45,45,45,45,45,45,]),'scope':([37,112,],[71,131,]),'while_instr':([0,9,15,25,34,106,107,121,122,142,143,],[19,19,19,19,19,19,19,19,19,19,19,]),'return_instr':([0,9,15,25,34,106,107,121,122,142,143,],[7,7,7,7,7,7,7,7,7,7,7,]),'rel_op':([52,59,62,66,75,76,101,103,118,139,],[94,94,94,94,94,94,94,94,94,94,]),'for_init':([1,],[25,]),'matrix_init':([14,23,30,36,40,46,57,60,74,90,123,],[49,49,49,49,49,49,49,49,49,49,49,]),'assignment':([0,9,15,25,34,106,107,121,122,142,143,],[8,8,8,8,8,8,8,8,8,8,8,]),'dot_op':([52,59,62,66,75,76,101,103,118,139,],[95,95,95,95,95,95,95,95,95,95,]),'print_instr':([0,9,15,25,34,106,107,121,122,142,143,],[11,11,11,11,11,11,11,11,11,11,11,]),'if_else_instr':([0,9,15,25,34,106,107,121,122,142,143,],[21,21,21,21,21,21,21,21,21,21,21,]),'instructions_opt':([0,],[13,]),'ones':([14,23,30,36,40,46,57,60,74,90,123,],[50,50,50,50,50,50,50,50,50,50,50,]),'bin_op':([52,59,62,66,75,76,101,103,118,139,],[90,90,90,90,90,90,90,90,90,90,]),'matrix_rows':([37,],[68,]),'expression':([14,23,30,36,40,46,57,60,74,90,123,],[52,59,62,66,75,76,101,103,52,118,139,]),'lvalue':([0,9,14,15,23,25,30,34,36,40,46,57,60,74,90,106,107,121,122,123,142,143,],[4,4,41,4,41,4,41,4,41,41,41,41,41,41,41,4,4,4,4,41,4,4,]),'assign_op':([4,],[30,]),'num_op':([52,59,62,66,75,76,101,103,118,139,],[89,89,89,89,89,89,89,89,89,89,]),'instructions':([0,9,],[15,34,]),'instr_block':([0,9,15,25,34,106,107,121,122,142,143,],[16,16,16,16,16,16,16,16,16,16,16,]),'for_instr':([0,9,15,25,34,106,107,121,122,142,143,],[17,17,17,17,17,17,17,17,17,17,17,]),'continue_instr':([0,9,15,25,34,106,107,121,122,142,143,],[6,6,6,6,6,6,6,6,6,6,6,]),'instruction':([0,9,15,25,34,106,107,121,122,142,143,],[20,20,56,61,56,125,126,137,138,145,146,]),'print_var':([14,74,],[55,115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','MParser.py',35),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','MParser.py',39),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','MParser.py',43),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','MParser.py',46),
  ('instructions -> instruction','instructions',1,'p_instructions','MParser.py',47),
  ('instruction -> if_else_instr','instruction',1,'p_instruction','MParser.py',56),
  ('instruction -> while_instr','instruction',1,'p_instruction','MParser.py',57),
  ('instruction -> for_instr','instruction',1,'p_instruction','MParser.py',58),
  ('instruction -> break_instr','instruction',1,'p_instruction','MParser.py',59),
  ('instruction -> continue_instr','instruction',1,'p_instruction','MParser.py',60),
  ('instruction -> return_instr','instruction',1,'p_instruction','MParser.py',61),
  ('instruction -> print_instr','instruction',1,'p_instruction','MParser.py',62),
  ('instruction -> instr_block','instruction',1,'p_instruction','MParser.py',63),
  ('instruction -> assignment ;','instruction',2,'p_instruction','MParser.py',64),
  ('if_else_instr -> IF ( expression ) instruction','if_else_instr',5,'p_if_else_inst','MParser.py',68),
  ('if_else_instr -> IF ( expression ) instruction ELSE instruction','if_else_instr',7,'p_if_else_inst','MParser.py',69),
  ('if_else_instr -> IF ( error ) instruction','if_else_instr',5,'p_if_else_inst','MParser.py',70),
  ('if_else_instr -> IF ( error ) instruction ELSE instruction','if_else_instr',7,'p_if_else_inst','MParser.py',71),
  ('while_instr -> WHILE ( expression ) instruction','while_instr',5,'p_while_inst','MParser.py',76),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_inst','MParser.py',77),
  ('for_instr -> FOR for_init instruction','for_instr',3,'p_for_inst','MParser.py',81),
  ('for_init -> ID = expression : expression','for_init',5,'p_for_init','MParser.py',85),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_inst','MParser.py',89),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_inst','MParser.py',93),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','MParser.py',97),
  ('print_instr -> PRINT print_vars ;','print_instr',3,'p_print_instr','MParser.py',101),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','MParser.py',102),
  ('print_vars -> print_vars , print_var','print_vars',3,'p_print_vars','MParser.py',106),
  ('print_vars -> print_var','print_vars',1,'p_print_vars','MParser.py',107),
  ('print_var -> STRING','print_var',1,'p_print_var','MParser.py',116),
  ('print_var -> expression','print_var',1,'p_print_var','MParser.py',117),
  ('instr_block -> { instructions }','instr_block',3,'p_complex_instr','MParser.py',121),
  ('number -> INT','number',1,'p_number','MParser.py',125),
  ('number -> FLOAT','number',1,'p_number','MParser.py',126),
  ('lvalue -> ID','lvalue',1,'p_lvalue','MParser.py',130),
  ('lvalue -> ID [ INT ]','lvalue',4,'p_lvalue','MParser.py',131),
  ('lvalue -> ID [ INT , INT ]','lvalue',6,'p_lvalue','MParser.py',132),
  ('assignment -> lvalue assign_op expression','assignment',3,'p_assignment','MParser.py',139),
  ('assign_op -> =','assign_op',1,'p_assign_op','MParser.py',143),
  ('assign_op -> PLUSASSIGN','assign_op',1,'p_assign_op','MParser.py',144),
  ('assign_op -> MINUSASSIGN','assign_op',1,'p_assign_op','MParser.py',145),
  ('assign_op -> MULASSIGN','assign_op',1,'p_assign_op','MParser.py',146),
  ('assign_op -> DIVASSIGN','assign_op',1,'p_assign_op','MParser.py',147),
  ('expression -> number','expression',1,'p_expression','MParser.py',151),
  ('expression -> lvalue','expression',1,'p_expression','MParser.py',152),
  ('expression -> matrix_init','expression',1,'p_expression','MParser.py',153),
  ('expression -> ( expression )','expression',3,'p_expression','MParser.py',154),
  ('expression -> - expression','expression',2,'p_expression','MParser.py',155),
  ("expression -> expression '",'expression',2,'p_expression','MParser.py',156),
  ('expression -> expression bin_op expression','expression',3,'p_expression','MParser.py',157),
  ('bin_op -> rel_op','bin_op',1,'p_bin_op','MParser.py',166),
  ('bin_op -> num_op','bin_op',1,'p_bin_op','MParser.py',167),
  ('bin_op -> dot_op','bin_op',1,'p_bin_op','MParser.py',168),
  ('rel_op -> <','rel_op',1,'p_rel_op','MParser.py',172),
  ('rel_op -> >','rel_op',1,'p_rel_op','MParser.py',173),
  ('rel_op -> EQ','rel_op',1,'p_rel_op','MParser.py',174),
  ('rel_op -> NEQ','rel_op',1,'p_rel_op','MParser.py',175),
  ('rel_op -> LESSEQ','rel_op',1,'p_rel_op','MParser.py',176),
  ('rel_op -> MOREEQ','rel_op',1,'p_rel_op','MParser.py',177),
  ('num_op -> +','num_op',1,'p_num_op','MParser.py',181),
  ('num_op -> -','num_op',1,'p_num_op','MParser.py',182),
  ('num_op -> *','num_op',1,'p_num_op','MParser.py',183),
  ('num_op -> /','num_op',1,'p_num_op','MParser.py',184),
  ('dot_op -> DOTPLUS','dot_op',1,'p_dot_op','MParser.py',188),
  ('dot_op -> DOTMINUS','dot_op',1,'p_dot_op','MParser.py',189),
  ('dot_op -> DOTMUL','dot_op',1,'p_dot_op','MParser.py',190),
  ('dot_op -> DOTDIV','dot_op',1,'p_dot_op','MParser.py',191),
  ('matrix_init -> eye','matrix_init',1,'p_matrix_init','MParser.py',195),
  ('matrix_init -> ones','matrix_init',1,'p_matrix_init','MParser.py',196),
  ('matrix_init -> zeros','matrix_init',1,'p_matrix_init','MParser.py',197),
  ('matrix_init -> [ matrix_rows ]','matrix_init',3,'p_matrix_init','MParser.py',198),
  ('matrix_init -> [ scopes ]','matrix_init',3,'p_matrix_init','MParser.py',199),
  ('eye -> EYE ( INT )','eye',4,'p_eye','MParser.py',203),
  ('ones -> ONES ( INT )','ones',4,'p_ones','MParser.py',207),
  ('zeros -> ZEROS ( INT )','zeros',4,'p_zeros','MParser.py',211),
  ('matrix_rows -> matrix_rows ; row_elems','matrix_rows',3,'p_matrix_rows','MParser.py',215),
  ('matrix_rows -> row_elems','matrix_rows',1,'p_matrix_rows','MParser.py',216),
  ('row_elems -> row_elems , number','row_elems',3,'p_row_elems','MParser.py',225),
  ('row_elems -> number','row_elems',1,'p_row_elems','MParser.py',226),
  ('scopes -> scope','scopes',1,'p_scopes','MParser.py',235),
  ('scopes -> scopes ; scope','scopes',3,'p_scopes','MParser.py',236),
  ('scope -> INT : INT','scope',3,'p_scope','MParser.py',246),
  ('scope -> number : number : number','scope',5,'p_scope','MParser.py',247),
]
